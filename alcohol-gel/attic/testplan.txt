# This is a sample test plan.
# Every line specifies a command to generate a test case.
# The first column specifies a group name.
# The second column specifies a command to generate the test case, it could be
# either a `copy` command or a generator with its respective arguments.
# A `copy` command expects a path to a file relatively to the task root.
# A generator could be a source file in Java, C++ or Python, which is compiled
# and executed with the specified arguments.
# Additionally, an argument which is different for every test case, is passed
# at the beginning. Arguments should be used to generate a uniquely random seed
# inside the generator.
# To generate test cases using test plan use `ocimatic input`


[Subtask 1]
  # n <= 100

  # Use sample data as test
  1 ; copy statement/sample-1.in
  1 ; copy statement/sample-2.in

  # random tests
  2 ; random_generator.py 10 100 4
  2 ; random_generator.py 10 100 4
  2 ; random_generator.py 10 100 4
  2 ; random_generator.py 10 100 4
  2 ; random_generator.py 10 100 4
  2 ; random_generator.py 10 100 4
  2 ; random_generator.py 10 100 5
  2 ; random_generator.py 10 100 5
  2 ; random_generator.py 10 100 5
  2 ; random_generator.py 10 100 5
  2 ; random_generator.py 10 100 5
  2 ; random_generator.py 10 100 5
  2 ; random_generator.py 10 100 5
  2 ; random_generator.py 10 100 6
  2 ; random_generator.py 10 100 6
  2 ; random_generator.py 10 100 6
  2 ; random_generator.py 10 100 6
  2 ; random_generator.py 10 100 6

  # likely impossible tests
  3 ; random_generator.py 10 100 1
  3 ; random_generator.py 10 100 1
  3 ; random_generator.py 10 100 1
  3 ; random_generator.py 10 100 1
  3 ; random_generator.py 10 100 1
  3 ; random_generator.py 10 100 1
  3 ; random_generator.py 10 100 1
  3 ; random_generator.py 10 100 1
  3 ; random_generator.py 10 100 1
  3 ; random_generator.py 10 100 1
 
[Subtask 2] 
  # n <= 5000

  # Random tests
  1 ; random_generator.py 1000 5000 2
  1 ; random_generator.py 1000 5000 2
  1 ; random_generator.py 1000 5000 2
  1 ; random_generator.py 1000 5000 3
  1 ; random_generator.py 1000 5000 3
  1 ; random_generator.py 1000 5000 3
  1 ; random_generator.py 1000 5000 3
  1 ; random_generator.py 1000 5000 3
  1 ; random_generator.py 1000 5000 4
  1 ; random_generator.py 1000 5000 4
  1 ; random_generator.py 1000 5000 4
  1 ; random_generator.py 1000 5000 4
  1 ; random_generator.py 1000 5000 5
  1 ; random_generator.py 1000 5000 5
  1 ; random_generator.py 1000 5000 5
  1 ; random_generator.py 1000 5000 5
  1 ; random_generator.py 1000 5000 6
  1 ; random_generator.py 1000 5000 6
  1 ; random_generator.py 1000 5000 6
  1 ; random_generator.py 1000 5000 6
  1 ; random_generator.py 1000 5000 7
  1 ; random_generator.py 1000 5000 7
  1 ; random_generator.py 1000 5000 7
  1 ; random_generator.py 1000 5000 7
  1 ; random_generator.py 1000 5000 7
  1 ; random_generator.py 1000 5000 8
  1 ; random_generator.py 1000 5000 8
  1 ; random_generator.py 1000 5000 8
  1 ; random_generator.py 1000 5000 8
  1 ; random_generator.py 1000 5000 9
  1 ; random_generator.py 1000 5000 9
  1 ; random_generator.py 1000 5000 9
  1 ; random_generator.py 1000 5000 9
  1 ; random_generator.py 1000 5000 9

 # likely impossible
  2 ; random_generator.py 1000 5000 1
  2 ; random_generator.py 1000 5000 1
  2 ; random_generator.py 1000 5000 1
  2 ; random_generator.py 1000 5000 1
  2 ; random_generator.py 1000 5000 1
  2 ; random_generator.py 1000 5000 1
  2 ; random_generator.py 1000 5000 1
  2 ; random_generator.py 1000 5000 1
  2 ; random_generator.py 1000 5000 1

[Subtask 3] 
  # n <= 10^5

  # Random tests
  1 ; random_generator.py 90000 100000 1
  1 ; random_generator.py 90000 100000 1
  1 ; random_generator.py 90000 100000 1
  1 ; random_generator.py 90000 100000 1
  1 ; random_generator.py 90000 100000 1
  1 ; random_generator.py 90000 100000 1
  1 ; random_generator.py 90000 100000 2
  1 ; random_generator.py 90000 100000 2
  1 ; random_generator.py 90000 100000 2
  1 ; random_generator.py 90000 100000 2
  1 ; random_generator.py 90000 100000 2
  1 ; random_generator.py 90000 100000 2
  1 ; random_generator.py 90000 100000 3
  1 ; random_generator.py 90000 100000 3
  1 ; random_generator.py 90000 100000 3
  1 ; random_generator.py 90000 100000 3
  1 ; random_generator.py 90000 100000 3
  1 ; random_generator.py 90000 100000 3
  1 ; random_generator.py 90000 100000 3
  1 ; random_generator.py 90000 100000 3
  1 ; random_generator.py 90000 100000 3
  1 ; random_generator.py 90000 100000 3
  1 ; random_generator.py 90000 100000 4
  1 ; random_generator.py 90000 100000 4
  1 ; random_generator.py 90000 100000 4
  1 ; random_generator.py 90000 100000 4
  1 ; random_generator.py 90000 100000 4
  1 ; random_generator.py 90000 100000 4
  1 ; random_generator.py 90000 100000 5
  1 ; random_generator.py 90000 100000 5
  1 ; random_generator.py 90000 100000 5
  1 ; random_generator.py 90000 100000 5
  1 ; random_generator.py 90000 100000 5
  1 ; random_generator.py 90000 100000 5
  1 ; random_generator.py 90000 100000 5
  1 ; random_generator.py 90000 100000 6
  1 ; random_generator.py 90000 100000 6
  1 ; random_generator.py 90000 100000 6
  1 ; random_generator.py 90000 100000 6
  1 ; random_generator.py 90000 100000 6
  1 ; random_generator.py 90000 100000 6
  1 ; random_generator.py 90000 100000 7
  1 ; random_generator.py 90000 100000 7
  1 ; random_generator.py 90000 100000 7
  1 ; random_generator.py 90000 100000 7
  1 ; random_generator.py 90000 100000 7
  1 ; random_generator.py 90000 100000 7
  1 ; random_generator.py 90000 100000 8
  1 ; random_generator.py 90000 100000 8
  1 ; random_generator.py 90000 100000 8
  1 ; random_generator.py 90000 100000 8
  1 ; random_generator.py 90000 100000 8
  1 ; random_generator.py 90000 100000 8
  1 ; random_generator.py 90000 100000 9
  1 ; random_generator.py 90000 100000 9
  1 ; random_generator.py 90000 100000 9
  1 ; random_generator.py 90000 100000 9
  1 ; random_generator.py 90000 100000 9
  1 ; random_generator.py 90000 100000 9
  1 ; random_generator.py 90000 100000 9
  1 ; random_generator.py 90000 100000 9
  1 ; random_generator.py 90000 100000 10
  1 ; random_generator.py 90000 100000 10
  1 ; random_generator.py 90000 100000 10
  1 ; random_generator.py 90000 100000 10
  1 ; random_generator.py 90000 100000 10


